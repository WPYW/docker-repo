version: "3.7"
services:
  backend:
    container_name: backend
    build:
      context: ./backend-repo
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    restart: unless-stopped
    # command: python backend/manage.py runserver 0.0.0.0:8000 # nomal start
    command: sh -c "cd backend/ && gunicorn wpyw.wsgi:application --bind 0:8000" # gunicorn start
    volumes:
      - ./backend-repo:/code
    ports:
      - 8000:8000
    env_file:
      - ./backend-repo/.env
    expose:
      - 8000
    networks:
      - app-tier
  nginx:
    build:
      context: ./nginx
    restart: unless-stopped
    volumes:
      - ./wpyw/static:/static
    ports:
      - 80:80
    expose:
      - 80
    networks:
      - app-tier
    depends_on:
      - backend
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/volume:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - 9090:9090
    networks:
      - app-tier
    depends_on:
      - backend
  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3060:3000
    volumes:
      - ./grafana/volume:/var/lib/grafana
    networks:
      - app-tier
    depends_on:
      - backend
      - prometheus

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
      - app-tier
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.46.0
    container_name: cadvisor
    restart: unless-stopped
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - app-tier
networks:
  app-tier:
    driver: bridge
volumes:
  build_folder: null
